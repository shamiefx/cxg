@import "tailwindcss";

/* Design tokens */
:root{
  --background:#0a0a0a;
  --foreground:#ededed;
  --card:#111111;
  --muted:#b5b5b5;
  --gold:#D4AF37;
}

/* Tailwind theme tokens are not used directly here to keep CSS validation clean */

/* Base styles */
html, body { height: 100%; }
body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-geist-sans), ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Helvetica Neue, Arial, Apple Color Emoji, Segoe UI Emoji;
}
/* Prevent horizontal scroll */
html, body { overflow-x: hidden; }

/* Fix off-center RainbowKit/Radix dialogs by neutralizing transforms on root ancestors */
:where(html, body, #__next) {
  transform: none !important;
  filter: none !important;
  perspective: none !important;
}

/* Ensure proper centering math + prevent text auto-zoom on iOS */
html { -webkit-text-size-adjust: 100%; }

/* Smooth anchor scrolling for in-page navigation */
html { scroll-behavior: smooth; }

/* Utility helpers */
.container { max-width: 72rem; margin-inline: auto; padding-inline: 1.5rem; }
/* Avoid elements growing wider than viewport */
* { box-sizing: border-box; max-width: 100vw; }

/* Mobile ergonomics */
@media (max-width: 640px) {
  input, select, textarea, button { font-size: 16px; }
  button { min-height: 44px; }
  /* Wallet page wants compact buttons */
  .wallet button { min-height: 36px; }
}

/* RainbowKit modal centering + mobile fixes */
/* Match both descendant and same-element variants, since RainbowKit often sets data-rk on the dialog element itself */
[data-rk] [aria-modal="true"],
[data-rk][aria-modal="true"] {
  position: fixed !important;
  inset: 0 !important;
  display: grid !important;
  place-items: center !important;
  /* Safe-area padding for iOS */
  padding-top: max(16px, env(safe-area-inset-top));
  padding-bottom: max(16px, env(safe-area-inset-bottom));
  /* Keep horizontal padding symmetric to avoid visual drift */
  padding-left: 16px;
  padding-right: 16px;
  z-index: 100 !important; /* above header/tooltips */
  transform: none !important;
}

[data-rk] [aria-modal="true"] [role="dialog"],
[data-rk][aria-modal="true"][role="dialog"] {
  max-width: 420px;
  width: 100%;
  max-height: 90dvh;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  border-radius: 16px;
}

@supports not (height: 100dvh) {
  [data-rk] [aria-modal="true"] [role="dialog"],
  [data-rk][aria-modal="true"][role="dialog"] { max-height: 90vh; }
}

/* Fallback centering for RainbowKit containers that use role=document */
[data-rk] [role="document"],
[data-rk][role="document"] {
  margin-inline: auto !important;
  display: block;
}

/* Additional nudge for specific RainbowKit container class variants (defensive) */
[data-rk] .ju367v15[role="document"],
[data-rk] ._9pm4ki5[role="document"] {
  margin: 0 auto !important;
}

/* Center Web3Modal reliably */
#w3m-modal,
div#w3m-modal {
  position: fixed !important;
  inset: 0 !important;
  margin: 0 !important;
  transform: none !important;
}

/* If a modal is present, ensure no transforms on app wrapper causing offset */
body:has(#w3m-modal) .app-root,
body:has(#w3m-modal) main {
  transform: none !important;
  filter: none !important;
  perspective: none !important;
}

/* ensure dialog centering */
#w3m-modal [role="dialog"] {
  display: grid !important;
  place-items: center !important;
}

#w3m-modal [role="dialog"] > * {
  margin: 0 auto !important;
}

/* Neutralize transforms when RainbowKit modal is open to avoid fixed-position drift */
body:has([data-rk] [aria-modal="true"]) .app-root,
body:has([data-rk] [aria-modal="true"]) header,
body:has([data-rk] [aria-modal="true"]) main,
body:has([data-rk][aria-modal="true"]) .app-root,
body:has([data-rk][aria-modal="true"]) header,
body:has([data-rk][aria-modal="true"]) main {
  transform: none !important;
  filter: none !important;
  perspective: none !important;
}

/* Prevent scrollbar compensation shifting content while modal is open */
body:has([data-rk] [aria-modal="true"]),
body:has(#w3m-modal) {
  padding-right: 0 !important;
}

